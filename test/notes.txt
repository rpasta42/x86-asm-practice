

sytem calls
   - steps
      - move system call number into eax
      - mov argument into ebx/ecx
      - call interrupt 0x80
   - exit call
      - mov eax, 1 ;syscall EXIT
      - mov ebx, 0 ;return status
      - int 0x80
   - print call
      - mov eax, 4 ;syscall write
      - mov ebx, 1 ;output to STDOUT
      - mov ecx, msg ;message address
      - mov edx, msgLen ;message length
   - read call
      - returns length in eax, when eax is 0 then
        it's over
      - steps
         - mov eax, 3 ;syscall READ
         - mov ebx, 0 ;STDIN
         - mov ecx, buffer_to_read
         - mov edx, 1 ;length
         - int 0x80

   - open call
      - return data is passed in eax
         - negative value if error
         - positive value if file descriptor

      - code:
         ```
         section .data
         filetoopen db 'live.txt', 0

         section .text
         _start:
         mov eax, 5
         mov ebx, filetoopen
         mov ecx, 2 ;read and write
         int 0x80
         ```

